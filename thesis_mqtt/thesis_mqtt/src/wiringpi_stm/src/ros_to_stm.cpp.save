#include <ros/ros.h>
#include <wiringPi.h>
#include <wiringSerial.h>
#include "wiringPiSPI.h"
#include "wiringPiI2C.h"
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define SPI_channel 0
#define SPI_clock_speed 1000000
#define pin 10
#define Deivce_id 0x08

int main(int argc, char **argv){
    ros::init(argc, argv, "test_wiringpi_spi");
    ros::NodeHandle nh;

    const char vel1_pub[] ="1,15";
    const char vel2_pub[] ="2,30";
    const char vel3_pub[] ="3,45";
      
//     vel1 = ;
//     string vel2 = "2,15";
//     string vel3 = "3,45";
// //     wiringPiSetupGpio();
// //    pinMode(pin, OUTPUT);
//     int fd = wiringPiSPISetupMode(SPI_channel, SPI_clock_speed, 0);
//     if(fd == -1){
//         printf("Failed to init SPI communitcation\n");
//         return -1;
//     }

//     ROS_INFO("SPI communication successfully setup");

//     unsigned char buff[1]= {23};
    
//     while(ros::ok()){
//         wiringPiSPIDataRW(SPI_channel, buff, 1);
//         ROS_INFO("Data was sent");
//         ros::Duration(1).sleep();
//         // digitalWrite(pin, HIGH);
//         // ROS_INFO("Set GPIO HIGH");
//         // ros::Duration(1.0).sleep();
//         // digitalWrite(pin, LOW);
//         // ROS_INFO("Set GPIO LOW");
//         // ros::Duration(1.0).sleep();
//     }

    int fd = serialOpen("/dev/ttyAMA0", 115200);
    if (fd == -1){        ROS_INFO("Failed");
        return -1;
    }
    ROS_INFO("Success");

    while (ros::ok()){
        printf("%s:  \n", "vel1");
        serialPuts(fd, "1:1-33,2:0-45,3:1-12");
        // // serialFlush(fd);
        // //ros::Duration(1).sleep();
        // printf("%s:  \n", "vel2");
        // serialPuts(fd, vel2_pub);
        // // serialFlush(fd);
        // //ros::Duration(1).sleep();
        // printf("%s:  \n", "vel3");
        // serialPuts(fd, vel3_pub);
        // serialFlush(fd);
        fflush(stdout);
        ros::Duration(1).sleep();
    }
}
